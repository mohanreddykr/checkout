NAME: heli
LAST DEPLOYED: Tue Jan 18 12:23:09 2022
NAMESPACE: default
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: helidon/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "heli-helidon-test-connection"
  labels:
    helm.sh/chart: helidon-0.1.0
    app.kubernetes.io/name: helidon
    app.kubernetes.io/instance: heli
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['heli-helidon:8080']
  restartPolicy: Never
MANIFEST:
---
# Source: helidon/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: heli-helidon
  labels:
    helm.sh/chart: helidon-0.1.0
    app.kubernetes.io/name: helidon
    app.kubernetes.io/instance: heli
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: helidon/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-device-pvc
spec:
  storageClassName: 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: helidon/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mohanreddykr/local
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: local-device-pvc

NOTES:
1. Get the application URL by running these commands:
  export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services heli-helidon)
  export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
